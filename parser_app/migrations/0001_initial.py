# Generated by Django 4.2.4 on 2023-08-24 14:39

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Country code')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('flag', models.ImageField(blank=True, null=True, upload_to='flag', verbose_name='Flag')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DealInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('status', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=255)),
                ('rated_quoted', models.CharField(max_length=255)),
                ('counter_offer', models.CharField(max_length=255)),
                ('agreed_rate', models.CharField(max_length=255)),
                ('introduction', models.BooleanField(default=False)),
                ('pitch', models.BooleanField(default=False)),
                ('views_impressions', models.BooleanField(default=False)),
                ('views_amount', models.CharField(blank=True, max_length=255, null=True)),
                ('affiliate_check', models.BooleanField(default=False)),
                ('affiliate_link', models.CharField(blank=True, max_length=255, null=True)),
                ('commissions', models.CharField(blank=True, max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DrugAndDoorCol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Drug And Door Col',
                'verbose_name_plural': 'Drug And Doors Col',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('status', models.CharField(default='New', max_length=25)),
            ],
            options={
                'verbose_name': 'Keyword',
                'verbose_name_plural': 'Keywords',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile')),
                ('video_requests', models.BigIntegerField(default=0)),
                ('channel_requests', models.BigIntegerField(default=0)),
                ('search_requests', models.BigIntegerField(default=0)),
                ('total_requests', models.BigIntegerField(default=0)),
                ('payment', models.BooleanField(default=False)),
                ('plan_start', models.DateTimeField(blank=True, null=True)),
                ('plan_expired_on', models.DateTimeField(blank=True, null=True)),
                ('plan_expired', models.BooleanField(default=False)),
                ('plan_availiable_requests', models.IntegerField(default=0)),
                ('temp_token', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('requests', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Quota',
                'verbose_name_plural': 'Quotas',
            },
        ),
        migrations.CreateModel(
            name='Remove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Remove',
                'verbose_name_plural': 'Remove',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('value', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(max_length=100, unique=True)),
                ('channel_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('websites_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=250), blank=True, null=True, size=None)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('views_count', models.IntegerField(blank=True, null=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=250), blank=True, null=True, size=None)),
                ('thumbnail_medium_url', models.CharField(blank=True, max_length=250, null=True)),
                ('status', models.CharField(default='New', max_length=25)),
                ('users_found_video', models.ManyToManyField(to='parser_app.profile')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
                'ordering': ['-id'],
                'required_db_vendor': 'postgresql',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='quota',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parser_app.quota'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DrugAndDoorField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('price', models.CharField(blank=True, max_length=30, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('stars', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3')], default=0, null=True)),
                ('drug_and_door_col', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='parser_app.druganddoorcol')),
            ],
            options={
                'verbose_name': 'Drug And Door Field',
                'verbose_name_plural': 'Drug And Door Fields',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('url', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('description', models.TextField()),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('websites_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=250), blank=True, size=None)),
                ('subscribers_count', models.IntegerField(blank=True, null=True)),
                ('video_count', models.IntegerField(blank=True, null=True)),
                ('youtube_categories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=250), blank=True, size=None)),
                ('thumbnail_medium_url', models.CharField(blank=True, max_length=150, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='parser_app.country')),
                ('users_found_channel', models.ManyToManyField(to='parser_app.profile')),
            ],
            options={
                'verbose_name': 'Channel',
                'verbose_name_plural': 'Channels',
                'ordering': ['-id'],
                'required_db_vendor': 'postgresql',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('domain', models.CharField(max_length=250, verbose_name='Domain')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand', verbose_name='Logo')),
                ('key_people', models.CharField(blank=True, max_length=250, verbose_name='Key people')),
                ('industries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=250), blank=True, size=None, verbose_name='Industries')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parser_app.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['-id'],
                'required_db_vendor': 'postgresql',
            },
        ),
    ]
